services:
  postgres:
    image: postgres:15-alpine
    container_name: insurance-db
    environment:
      POSTGRES_DB: insurance_db
      POSTGRES_USER: insurance_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/functions:/docker-entrypoint-initdb.d  # <-- scripts exécutés au démarrage
    networks:
      - insurance-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U insurance_user -d insurance_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  insurance-api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: insurance-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/insurance_db
      SPRING_DATASOURCE_USERNAME: insurance_user
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - insurance-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: insurance-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - insurance-api
    networks:
      - insurance-network

volumes:
  postgres_data:

networks:
  insurance-network:
    driver: bridge